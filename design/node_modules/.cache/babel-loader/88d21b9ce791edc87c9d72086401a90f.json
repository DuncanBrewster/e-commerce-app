{"ast":null,"code":"import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\nimport cartReducer from \"./cartRedux\";\nimport userReducer from \"./userRedux\";\nexport default configureStore({\n  reducer: {\n    cart: cartReducer,\n    user: userReducer\n  }\n});\n/* import {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  version: 1,\r\n  storage,\r\n};\r\n\r\nconst rootReducer = combineReducers({ user: userReducer, cart: cartReducer });\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport const store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n});\r\n\r\nexport let persistor = persistStore(store); */","map":{"version":3,"sources":["C:/Users/dunca/Documents/VSCODE/e-commerce-app/design/src/redux/store.js"],"names":["configureStore","combineReducers","cartReducer","userReducer","reducer","cart","user"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,eAAzB,QAAgD,kBAAhD;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,aAAxB;AAGA,eAAeH,cAAc,CAAC;AAC5BI,EAAAA,OAAO,EAAE;AACPC,IAAAA,IAAI,EAAEH,WADC;AAEPI,IAAAA,IAAI,EAAEH;AAFC;AADmB,CAAD,CAA7B;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\r\nimport cartReducer from \"./cartRedux\";\r\nimport userReducer from \"./userRedux\";\r\n\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    cart: cartReducer,\r\n    user: userReducer,\r\n  }\r\n})\r\n/* import {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  version: 1,\r\n  storage,\r\n};\r\n\r\nconst rootReducer = combineReducers({ user: userReducer, cart: cartReducer });\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport const store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n});\r\n\r\nexport let persistor = persistStore(store); */"]},"metadata":{},"sourceType":"module"}